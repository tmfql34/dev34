<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">


	<!-- 설정 들어내기 -->
	<context:property-placeholder location="classpath:*.properties" />



	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<context:component-scan base-package="com.kosmo.**" />

	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 얘는 항상 리턴이 없으면 널을 던지기 때문에 항상 마지막에 걸어줘야된다. -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!--  transaction Manager-->
	<bean id="txManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="kosmoDS" />
	</bean>
	
	
	<!-- <tx:annotation-driven transaction-manager="txManager"/> --><!-- @쓸때 열어주는거! -->
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="cut" expression="execution(* com.kosmo.board.*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="cut" />
	</aop:config>
	
	<!-- common fileUpload를 이용하기 위한 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
	<!-- datasource --> 
	<bean id="kosmoDS" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	    <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:XE" />
	    <property name="username" value="custom" />
	    <property name="password" value="1111" />
	</bean>
	
	<!-- DBCP --> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="kosmoDS"/> 
		<property name="configLocation" value="classpath:mybatis-context.xml"/>
		<property name="mapperLocations" value="classpath:*-map.xml"/> 
	</bean> 

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
	<constructor-arg ref="sqlSessionFactory"/> 
	</bean> 
	
	
	<!--MapperInterface.java 사용 시-->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="com.kosmo.board" />
      <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
   </bean>
	
</beans>
